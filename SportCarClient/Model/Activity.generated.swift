//
//  Activity.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - Activity properties

extension Activity {

    @NSManaged var actDescription: String?
    @NSManaged var activityID: String?
    @NSManaged var applyAt: NSDate?
    @NSManaged var atString: String?
    @NSManaged var commentNum: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var createdAt: NSDate?
    @NSManaged var endAt: NSDate?
    @NSManaged var likeNum: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var location_des: String?
    @NSManaged var location_x: Double // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var location_y: Double // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var maxAttend: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var name: String?
    @NSManaged var poster: String?
    @NSManaged var sent: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var startAt: NSDate?

    @NSManaged var club: Club?
    @NSManaged var user: User?

    @NSManaged var comments: Set<ActivityComment>

}

// MARK: - Activity KVC compliant to-many accessors and helpers

extension Activity {

    @NSManaged private func addCommentsObject(object: ActivityComment)
    @NSManaged private func removeCommentsObject(object: ActivityComment)
    @NSManaged func addComments(comments: Set<ActivityComment>)
    @NSManaged func removeComments(comments: Set<ActivityComment>)

    func addComment(comment: ActivityComment) { self.addCommentsObject(comment) }
    func removeComment(comment: ActivityComment) { self.removeCommentsObject(comment) }

}

// MARK: - Activity query attributes

extension Activity {

    static let actDescription = AlecrimCoreData.NullableAttribute<String>("actDescription")
    static let activityID = AlecrimCoreData.NullableAttribute<String>("activityID")
    static let applyAt = AlecrimCoreData.NullableAttribute<NSDate>("applyAt")
    static let atString = AlecrimCoreData.NullableAttribute<String>("atString")
    static let commentNum = AlecrimCoreData.NullableAttribute<Int32>("commentNum")
    static let createdAt = AlecrimCoreData.NullableAttribute<NSDate>("createdAt")
    static let endAt = AlecrimCoreData.NullableAttribute<NSDate>("endAt")
    static let likeNum = AlecrimCoreData.NullableAttribute<Int32>("likeNum")
    static let location_des = AlecrimCoreData.NullableAttribute<String>("location_des")
    static let location_x = AlecrimCoreData.NullableAttribute<Double>("location_x")
    static let location_y = AlecrimCoreData.NullableAttribute<Double>("location_y")
    static let maxAttend = AlecrimCoreData.NullableAttribute<Int32>("maxAttend")
    static let name = AlecrimCoreData.NullableAttribute<String>("name")
    static let poster = AlecrimCoreData.NullableAttribute<String>("poster")
    static let sent = AlecrimCoreData.NullableAttribute<Bool>("sent")
    static let startAt = AlecrimCoreData.NullableAttribute<NSDate>("startAt")

    static let club = AlecrimCoreData.NullableAttribute<Club>("club")
    static let user = AlecrimCoreData.NullableAttribute<User>("user")

    static let comments = AlecrimCoreData.Attribute<Set<ActivityComment>>("comments")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: Activity {

    var actDescription: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("actDescription", self) }
    var activityID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("activityID", self) }
    var applyAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("applyAt", self) }
    var atString: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("atString", self) }
    var commentNum: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("commentNum", self) }
    var createdAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("createdAt", self) }
    var endAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("endAt", self) }
    var likeNum: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("likeNum", self) }
    var location_des: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("location_des", self) }
    var location_x: AlecrimCoreData.NullableAttribute<Double> { return AlecrimCoreData.NullableAttribute<Double>("location_x", self) }
    var location_y: AlecrimCoreData.NullableAttribute<Double> { return AlecrimCoreData.NullableAttribute<Double>("location_y", self) }
    var maxAttend: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("maxAttend", self) }
    var name: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("name", self) }
    var poster: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("poster", self) }
    var sent: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("sent", self) }
    var startAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("startAt", self) }

    var club: AlecrimCoreData.NullableAttribute<Club> { return AlecrimCoreData.NullableAttribute<Club>("club", self) }
    var user: AlecrimCoreData.NullableAttribute<User> { return AlecrimCoreData.NullableAttribute<User>("user", self) }

    var comments: AlecrimCoreData.Attribute<Set<ActivityComment>> { return AlecrimCoreData.Attribute<Set<ActivityComment>>("comments", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var activities: AlecrimCoreData.Table<Activity> { return AlecrimCoreData.Table<Activity>(dataContext: self) }

}

