//
//  StatusComment.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - StatusComment properties

extension StatusComment {

    @NSManaged var content: String?
    @NSManaged var createdAt: NSDate?
    @NSManaged var image: String?
    @NSManaged var commentID: String?

    @NSManaged var status: Status?
    @NSManaged var user: User?

}

// MARK: - StatusComment query attributes

extension StatusComment {

    static let content = AlecrimCoreData.NullableAttribute<String>("content")
    static let createdAt = AlecrimCoreData.NullableAttribute<NSDate>("createdAt")
    static let image = AlecrimCoreData.NullableAttribute<String>("image")
    static let commentID = AlecrimCoreData.NullableAttribute<String>("commentID")

    static let status = AlecrimCoreData.NullableAttribute<Status>("status")
    static let user = AlecrimCoreData.NullableAttribute<User>("user")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: StatusComment {

    var content: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("content", self) }
    var createdAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("createdAt", self) }
    var image: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("image", self) }
    var commentID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("commentID", self) }

    var status: AlecrimCoreData.NullableAttribute<Status> { return AlecrimCoreData.NullableAttribute<Status>("status", self) }
    var user: AlecrimCoreData.NullableAttribute<User> { return AlecrimCoreData.NullableAttribute<User>("user", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var statusComments: AlecrimCoreData.Table<StatusComment> { return AlecrimCoreData.Table<StatusComment>(dataContext: self) }

}

