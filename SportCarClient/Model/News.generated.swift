//
//  News.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - News properties

extension News {

    @NSManaged var commentNum: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var contentURL: String?
    @NSManaged var cover: String?
    @NSManaged var createdAt: NSDate?
    @NSManaged var likeNum: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var newsID: String?
    @NSManaged var recentLikerName: String?
    @NSManaged var shareNum: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var title: String?

    @NSManaged var comments: Set<NewsComment>

}

// MARK: - News KVC compliant to-many accessors and helpers

extension News {

    @NSManaged private func addCommentsObject(object: NewsComment)
    @NSManaged private func removeCommentsObject(object: NewsComment)
    @NSManaged func addComments(comments: Set<NewsComment>)
    @NSManaged func removeComments(comments: Set<NewsComment>)

    func addComment(comment: NewsComment) { self.addCommentsObject(comment) }
    func removeComment(comment: NewsComment) { self.removeCommentsObject(comment) }

}

// MARK: - News query attributes

extension News {

    static let commentNum = AlecrimCoreData.NullableAttribute<Int32>("commentNum")
    static let contentURL = AlecrimCoreData.NullableAttribute<String>("contentURL")
    static let cover = AlecrimCoreData.NullableAttribute<String>("cover")
    static let createdAt = AlecrimCoreData.NullableAttribute<NSDate>("createdAt")
    static let likeNum = AlecrimCoreData.NullableAttribute<Int32>("likeNum")
    static let newsID = AlecrimCoreData.NullableAttribute<String>("newsID")
    static let recentLikerName = AlecrimCoreData.NullableAttribute<String>("recentLikerName")
    static let shareNum = AlecrimCoreData.NullableAttribute<Int32>("shareNum")
    static let title = AlecrimCoreData.NullableAttribute<String>("title")

    static let comments = AlecrimCoreData.Attribute<Set<NewsComment>>("comments")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: News {

    var commentNum: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("commentNum", self) }
    var contentURL: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("contentURL", self) }
    var cover: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("cover", self) }
    var createdAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("createdAt", self) }
    var likeNum: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("likeNum", self) }
    var newsID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("newsID", self) }
    var recentLikerName: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("recentLikerName", self) }
    var shareNum: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("shareNum", self) }
    var title: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("title", self) }

    var comments: AlecrimCoreData.Attribute<Set<NewsComment>> { return AlecrimCoreData.Attribute<Set<NewsComment>>("comments", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var news: AlecrimCoreData.Table<News> { return AlecrimCoreData.Table<News>(dataContext: self) }

}

