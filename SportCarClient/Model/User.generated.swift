//
//  User.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - User properties

extension User {

    @NSManaged var age: Int // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var avatarUrl: String?
    @NSManaged var birthDate: NSDate?
    @NSManaged var district: String?
    @NSManaged var gender: String?
    @NSManaged var job: String?
    @NSManaged var nickName: String?
    @NSManaged var phoneNum: String?
    @NSManaged var signature: String?
    @NSManaged var starSign: String?
    @NSManaged var userID: String?

    @NSManaged var fans: Set<User>
    @NSManaged var follows: Set<User>

}

// MARK: - User KVC compliant to-many accessors and helpers

extension User {

    @NSManaged private func addFansObject(object: User)
    @NSManaged private func removeFansObject(object: User)
    @NSManaged func addFans(fans: Set<User>)
    @NSManaged func removeFans(fans: Set<User>)

    @NSManaged private func addFollowsObject(object: User)
    @NSManaged private func removeFollowsObject(object: User)
    @NSManaged func addFollows(follows: Set<User>)
    @NSManaged func removeFollows(follows: Set<User>)

    func addFan(fan: User) { self.addFansObject(fan) }
    func removeFan(fan: User) { self.removeFansObject(fan) }

    func addFollow(follow: User) { self.addFollowsObject(follow) }
    func removeFollow(follow: User) { self.removeFollowsObject(follow) }

}

// MARK: - User query attributes

extension User {

    static let age = AlecrimCoreData.NullableAttribute<Int>("age")
    static let avatarUrl = AlecrimCoreData.NullableAttribute<String>("avatarUrl")
    static let birthDate = AlecrimCoreData.NullableAttribute<NSDate>("birthDate")
    static let district = AlecrimCoreData.NullableAttribute<String>("district")
    static let gender = AlecrimCoreData.NullableAttribute<String>("gender")
    static let job = AlecrimCoreData.NullableAttribute<String>("job")
    static let nickName = AlecrimCoreData.NullableAttribute<String>("nickName")
    static let phoneNum = AlecrimCoreData.NullableAttribute<String>("phoneNum")
    static let signature = AlecrimCoreData.NullableAttribute<String>("signature")
    static let starSign = AlecrimCoreData.NullableAttribute<String>("starSign")
    static let userID = AlecrimCoreData.NullableAttribute<String>("userID")

    static let fans = AlecrimCoreData.Attribute<Set<User>>("fans")
    static let follows = AlecrimCoreData.Attribute<Set<User>>("follows")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: User {

    var age: AlecrimCoreData.NullableAttribute<Int> { return AlecrimCoreData.NullableAttribute<Int>("age", self) }
    var avatarUrl: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("avatarUrl", self) }
    var birthDate: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("birthDate", self) }
    var district: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("district", self) }
    var gender: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("gender", self) }
    var job: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("job", self) }
    var nickName: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("nickName", self) }
    var phoneNum: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("phoneNum", self) }
    var signature: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("signature", self) }
    var starSign: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("starSign", self) }
    var userID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("userID", self) }

    var fans: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("fans", self) }
    var follows: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("follows", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var users: AlecrimCoreData.Table<User> { return AlecrimCoreData.Table<User>(dataContext: self) }

}

