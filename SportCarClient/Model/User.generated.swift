//
//  User.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - User properties

extension User {

    @NSManaged var age: Int32 // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var avatarCarID: String?
    @NSManaged var avatarUrl: String?
    @NSManaged var birthDate: NSDate?
    @NSManaged var district: String?
    @NSManaged var gender: String?
    @NSManaged var job: String?
    @NSManaged var nickName: String?
    @NSManaged var phoneNum: String?
    @NSManaged var remarkName: String?
    @NSManaged var signature: String?
    @NSManaged var starSign: String?
    @NSManaged var userID: String?

    @NSManaged var mostRecentChat: ChatRecord?
    @NSManaged var notifications: Notification?
    @NSManaged var profile: Profile?

    @NSManaged var actComments: Set<ActivityComment>
    @NSManaged var activity: Set<Activity>
    @NSManaged var carsLiked: Set<SportCar>
    @NSManaged var chatRecords: Set<ChatRecord>
    @NSManaged var club: Set<Club>
    @NSManaged var clubCreated: Set<Club>
    @NSManaged var fans: Set<User>
    @NSManaged var follows: Set<User>
    @NSManaged var likeNews: Set<News>
    @NSManaged var newsComment: Set<NewsComment>
    @NSManaged var ownership: Set<SportCarOwnerShip>
    @NSManaged var status: Set<Status>
    @NSManaged var statusComment: Set<StatusComment>

}

// MARK: - User KVC compliant to-many accessors and helpers

extension User {

    @NSManaged private func addActCommentsObject(object: ActivityComment)
    @NSManaged private func removeActCommentsObject(object: ActivityComment)
    @NSManaged func addActComments(actComments: Set<ActivityComment>)
    @NSManaged func removeActComments(actComments: Set<ActivityComment>)

    @NSManaged private func addActivityObject(object: Activity)
    @NSManaged private func removeActivityObject(object: Activity)
    @NSManaged func addActivity(activity: Set<Activity>)
    @NSManaged func removeActivity(activity: Set<Activity>)

    @NSManaged private func addCarsLikedObject(object: SportCar)
    @NSManaged private func removeCarsLikedObject(object: SportCar)
    @NSManaged func addCarsLiked(carsLiked: Set<SportCar>)
    @NSManaged func removeCarsLiked(carsLiked: Set<SportCar>)

    @NSManaged private func addChatRecordsObject(object: ChatRecord)
    @NSManaged private func removeChatRecordsObject(object: ChatRecord)
    @NSManaged func addChatRecords(chatRecords: Set<ChatRecord>)
    @NSManaged func removeChatRecords(chatRecords: Set<ChatRecord>)

    @NSManaged private func addClubObject(object: Club)
    @NSManaged private func removeClubObject(object: Club)
    @NSManaged func addClub(club: Set<Club>)
    @NSManaged func removeClub(club: Set<Club>)

    @NSManaged private func addClubCreatedObject(object: Club)
    @NSManaged private func removeClubCreatedObject(object: Club)
    @NSManaged func addClubCreated(clubCreated: Set<Club>)
    @NSManaged func removeClubCreated(clubCreated: Set<Club>)

    @NSManaged private func addFansObject(object: User)
    @NSManaged private func removeFansObject(object: User)
    @NSManaged func addFans(fans: Set<User>)
    @NSManaged func removeFans(fans: Set<User>)

    @NSManaged private func addFollowsObject(object: User)
    @NSManaged private func removeFollowsObject(object: User)
    @NSManaged func addFollows(follows: Set<User>)
    @NSManaged func removeFollows(follows: Set<User>)

    @NSManaged private func addLikeNewsObject(object: News)
    @NSManaged private func removeLikeNewsObject(object: News)
    @NSManaged func addLikeNews(likeNews: Set<News>)
    @NSManaged func removeLikeNews(likeNews: Set<News>)

    @NSManaged private func addNewsCommentObject(object: NewsComment)
    @NSManaged private func removeNewsCommentObject(object: NewsComment)
    @NSManaged func addNewsComment(newsComment: Set<NewsComment>)
    @NSManaged func removeNewsComment(newsComment: Set<NewsComment>)

    @NSManaged private func addOwnershipObject(object: SportCarOwnerShip)
    @NSManaged private func removeOwnershipObject(object: SportCarOwnerShip)
    @NSManaged func addOwnership(ownership: Set<SportCarOwnerShip>)
    @NSManaged func removeOwnership(ownership: Set<SportCarOwnerShip>)

    @NSManaged private func addStatusObject(object: Status)
    @NSManaged private func removeStatusObject(object: Status)
    @NSManaged func addStatus(status: Set<Status>)
    @NSManaged func removeStatus(status: Set<Status>)

    @NSManaged private func addStatusCommentObject(object: StatusComment)
    @NSManaged private func removeStatusCommentObject(object: StatusComment)
    @NSManaged func addStatusComment(statusComment: Set<StatusComment>)
    @NSManaged func removeStatusComment(statusComment: Set<StatusComment>)

    func addActComment(actComment: ActivityComment) { self.addActCommentsObject(actComment) }
    func removeActComment(actComment: ActivityComment) { self.removeActCommentsObject(actComment) }

    @nonobjc func addActivity(activity: Activity) { self.addActivityObject(activity) }
    @nonobjc func removeActivity(activity: Activity) { self.removeActivityObject(activity) }

    @nonobjc func addCarsLiked(carsLiked: SportCar) { self.addCarsLikedObject(carsLiked) }
    @nonobjc func removeCarsLiked(carsLiked: SportCar) { self.removeCarsLikedObject(carsLiked) }

    func addChatRecord(chatRecord: ChatRecord) { self.addChatRecordsObject(chatRecord) }
    func removeChatRecord(chatRecord: ChatRecord) { self.removeChatRecordsObject(chatRecord) }

    @nonobjc func addClub(club: Club) { self.addClubObject(club) }
    @nonobjc func removeClub(club: Club) { self.removeClubObject(club) }

    @nonobjc func addClubCreated(clubCreated: Club) { self.addClubCreatedObject(clubCreated) }
    @nonobjc func removeClubCreated(clubCreated: Club) { self.removeClubCreatedObject(clubCreated) }

    func addFan(fan: User) { self.addFansObject(fan) }
    func removeFan(fan: User) { self.removeFansObject(fan) }

    func addFollow(follow: User) { self.addFollowsObject(follow) }
    func removeFollow(follow: User) { self.removeFollowsObject(follow) }

    @nonobjc func addLikeNews(likeNews: News) { self.addLikeNewsObject(likeNews) }
    @nonobjc func removeLikeNews(likeNews: News) { self.removeLikeNewsObject(likeNews) }

    @nonobjc func addNewsComment(newsComment: NewsComment) { self.addNewsCommentObject(newsComment) }
    @nonobjc func removeNewsComment(newsComment: NewsComment) { self.removeNewsCommentObject(newsComment) }

    @nonobjc func addOwnership(ownership: SportCarOwnerShip) { self.addOwnershipObject(ownership) }
    @nonobjc func removeOwnership(ownership: SportCarOwnerShip) { self.removeOwnershipObject(ownership) }

    func addStatu(statu: Status) { self.addStatusObject(statu) }
    func removeStatu(statu: Status) { self.removeStatusObject(statu) }

    @nonobjc func addStatusComment(statusComment: StatusComment) { self.addStatusCommentObject(statusComment) }
    @nonobjc func removeStatusComment(statusComment: StatusComment) { self.removeStatusCommentObject(statusComment) }

}

// MARK: - User query attributes

extension User {

    static let age = AlecrimCoreData.NullableAttribute<Int32>("age")
    static let avatarCarID = AlecrimCoreData.NullableAttribute<String>("avatarCarID")
    static let avatarUrl = AlecrimCoreData.NullableAttribute<String>("avatarUrl")
    static let birthDate = AlecrimCoreData.NullableAttribute<NSDate>("birthDate")
    static let district = AlecrimCoreData.NullableAttribute<String>("district")
    static let gender = AlecrimCoreData.NullableAttribute<String>("gender")
    static let job = AlecrimCoreData.NullableAttribute<String>("job")
    static let nickName = AlecrimCoreData.NullableAttribute<String>("nickName")
    static let phoneNum = AlecrimCoreData.NullableAttribute<String>("phoneNum")
    static let remarkName = AlecrimCoreData.NullableAttribute<String>("remarkName")
    static let signature = AlecrimCoreData.NullableAttribute<String>("signature")
    static let starSign = AlecrimCoreData.NullableAttribute<String>("starSign")
    static let userID = AlecrimCoreData.NullableAttribute<String>("userID")

    static let mostRecentChat = AlecrimCoreData.NullableAttribute<ChatRecord>("mostRecentChat")
    static let notifications = AlecrimCoreData.NullableAttribute<Notification>("notifications")
    static let profile = AlecrimCoreData.NullableAttribute<Profile>("profile")

    static let actComments = AlecrimCoreData.Attribute<Set<ActivityComment>>("actComments")
    static let activity = AlecrimCoreData.Attribute<Set<Activity>>("activity")
    static let carsLiked = AlecrimCoreData.Attribute<Set<SportCar>>("carsLiked")
    static let chatRecords = AlecrimCoreData.Attribute<Set<ChatRecord>>("chatRecords")
    static let club = AlecrimCoreData.Attribute<Set<Club>>("club")
    static let clubCreated = AlecrimCoreData.Attribute<Set<Club>>("clubCreated")
    static let fans = AlecrimCoreData.Attribute<Set<User>>("fans")
    static let follows = AlecrimCoreData.Attribute<Set<User>>("follows")
    static let likeNews = AlecrimCoreData.Attribute<Set<News>>("likeNews")
    static let newsComment = AlecrimCoreData.Attribute<Set<NewsComment>>("newsComment")
    static let ownership = AlecrimCoreData.Attribute<Set<SportCarOwnerShip>>("ownership")
    static let status = AlecrimCoreData.Attribute<Set<Status>>("status")
    static let statusComment = AlecrimCoreData.Attribute<Set<StatusComment>>("statusComment")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: User {

    var age: AlecrimCoreData.NullableAttribute<Int32> { return AlecrimCoreData.NullableAttribute<Int32>("age", self) }
    var avatarCarID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("avatarCarID", self) }
    var avatarUrl: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("avatarUrl", self) }
    var birthDate: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("birthDate", self) }
    var district: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("district", self) }
    var gender: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("gender", self) }
    var job: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("job", self) }
    var nickName: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("nickName", self) }
    var phoneNum: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("phoneNum", self) }
    var remarkName: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("remarkName", self) }
    var signature: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("signature", self) }
    var starSign: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("starSign", self) }
    var userID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("userID", self) }

    var mostRecentChat: AlecrimCoreData.NullableAttribute<ChatRecord> { return AlecrimCoreData.NullableAttribute<ChatRecord>("mostRecentChat", self) }
    var notifications: AlecrimCoreData.NullableAttribute<Notification> { return AlecrimCoreData.NullableAttribute<Notification>("notifications", self) }
    var profile: AlecrimCoreData.NullableAttribute<Profile> { return AlecrimCoreData.NullableAttribute<Profile>("profile", self) }

    var actComments: AlecrimCoreData.Attribute<Set<ActivityComment>> { return AlecrimCoreData.Attribute<Set<ActivityComment>>("actComments", self) }
    var activity: AlecrimCoreData.Attribute<Set<Activity>> { return AlecrimCoreData.Attribute<Set<Activity>>("activity", self) }
    var carsLiked: AlecrimCoreData.Attribute<Set<SportCar>> { return AlecrimCoreData.Attribute<Set<SportCar>>("carsLiked", self) }
    var chatRecords: AlecrimCoreData.Attribute<Set<ChatRecord>> { return AlecrimCoreData.Attribute<Set<ChatRecord>>("chatRecords", self) }
    var club: AlecrimCoreData.Attribute<Set<Club>> { return AlecrimCoreData.Attribute<Set<Club>>("club", self) }
    var clubCreated: AlecrimCoreData.Attribute<Set<Club>> { return AlecrimCoreData.Attribute<Set<Club>>("clubCreated", self) }
    var fans: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("fans", self) }
    var follows: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("follows", self) }
    var likeNews: AlecrimCoreData.Attribute<Set<News>> { return AlecrimCoreData.Attribute<Set<News>>("likeNews", self) }
    var newsComment: AlecrimCoreData.Attribute<Set<NewsComment>> { return AlecrimCoreData.Attribute<Set<NewsComment>>("newsComment", self) }
    var ownership: AlecrimCoreData.Attribute<Set<SportCarOwnerShip>> { return AlecrimCoreData.Attribute<Set<SportCarOwnerShip>>("ownership", self) }
    var status: AlecrimCoreData.Attribute<Set<Status>> { return AlecrimCoreData.Attribute<Set<Status>>("status", self) }
    var statusComment: AlecrimCoreData.Attribute<Set<StatusComment>> { return AlecrimCoreData.Attribute<Set<StatusComment>>("statusComment", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var users: AlecrimCoreData.Table<User> { return AlecrimCoreData.Table<User>(dataContext: self) }

}

