//
//  StatusComment.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - StatusComment properties

extension StatusComment {

    @NSManaged var alreadySent: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var atString: String?
    @NSManaged var commentID: String?
    @NSManaged var content: String?
    @NSManaged var createdAt: NSDate?
    @NSManaged var image: String?

    @NSManaged var commentTo: StatusComment?
    @NSManaged var status: Status?
    @NSManaged var user: User?

    @NSManaged var replys: Set<StatusComment>

}

// MARK: - StatusComment KVC compliant to-many accessors and helpers

extension StatusComment {

    @NSManaged private func addReplysObject(object: StatusComment)
    @NSManaged private func removeReplysObject(object: StatusComment)
    @NSManaged func addReplys(replys: Set<StatusComment>)
    @NSManaged func removeReplys(replys: Set<StatusComment>)

    func addReply(reply: StatusComment) { self.addReplysObject(reply) }
    func removeReply(reply: StatusComment) { self.removeReplysObject(reply) }

}

// MARK: - StatusComment query attributes

extension StatusComment {

    static let alreadySent = AlecrimCoreData.NullableAttribute<Bool>("alreadySent")
    static let atString = AlecrimCoreData.NullableAttribute<String>("atString")
    static let commentID = AlecrimCoreData.NullableAttribute<String>("commentID")
    static let content = AlecrimCoreData.NullableAttribute<String>("content")
    static let createdAt = AlecrimCoreData.NullableAttribute<NSDate>("createdAt")
    static let image = AlecrimCoreData.NullableAttribute<String>("image")

    static let commentTo = AlecrimCoreData.NullableAttribute<StatusComment>("commentTo")
    static let status = AlecrimCoreData.NullableAttribute<Status>("status")
    static let user = AlecrimCoreData.NullableAttribute<User>("user")

    static let replys = AlecrimCoreData.Attribute<Set<StatusComment>>("replys")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: StatusComment {

    var alreadySent: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("alreadySent", self) }
    var atString: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("atString", self) }
    var commentID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("commentID", self) }
    var content: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("content", self) }
    var createdAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("createdAt", self) }
    var image: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("image", self) }

    var commentTo: AlecrimCoreData.NullableAttribute<StatusComment> { return AlecrimCoreData.NullableAttribute<StatusComment>("commentTo", self) }
    var status: AlecrimCoreData.NullableAttribute<Status> { return AlecrimCoreData.NullableAttribute<Status>("status", self) }
    var user: AlecrimCoreData.NullableAttribute<User> { return AlecrimCoreData.NullableAttribute<User>("user", self) }

    var replys: AlecrimCoreData.Attribute<Set<StatusComment>> { return AlecrimCoreData.Attribute<Set<StatusComment>>("replys", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var statusComments: AlecrimCoreData.Table<StatusComment> { return AlecrimCoreData.Table<StatusComment>(dataContext: self) }

}

