//
//  SportCar.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - SportCar properties

extension SportCar {

    @NSManaged var body: String?
    @NSManaged var carID: String?
    @NSManaged var engine: String?
    @NSManaged var image: String?
    @NSManaged var logo: String?
    @NSManaged var manufacturer: String?
    @NSManaged var max_speed: String?
    @NSManaged var name: String?
    @NSManaged var price: String?
    @NSManaged var transimission: String?
    @NSManaged var zeroTo60: String?

    @NSManaged var related_status: Status?

    @NSManaged var followers: Set<User>
    @NSManaged var ownership: Set<SportCarOwnerShip>

}

// MARK: - SportCar KVC compliant to-many accessors and helpers

extension SportCar {

    @NSManaged private func addFollowersObject(object: User)
    @NSManaged private func removeFollowersObject(object: User)
    @NSManaged func addFollowers(followers: Set<User>)
    @NSManaged func removeFollowers(followers: Set<User>)

    @NSManaged private func addOwnershipObject(object: SportCarOwnerShip)
    @NSManaged private func removeOwnershipObject(object: SportCarOwnerShip)
    @NSManaged func addOwnership(ownership: Set<SportCarOwnerShip>)
    @NSManaged func removeOwnership(ownership: Set<SportCarOwnerShip>)

    func addFollower(follower: User) { self.addFollowersObject(follower) }
    func removeFollower(follower: User) { self.removeFollowersObject(follower) }

    func addOwnership(ownership: SportCarOwnerShip) { self.addOwnershipObject(ownership) }
    func removeOwnership(ownership: SportCarOwnerShip) { self.removeOwnershipObject(ownership) }

}

// MARK: - SportCar query attributes

extension SportCar {

    static let body = AlecrimCoreData.NullableAttribute<String>("body")
    static let carID = AlecrimCoreData.NullableAttribute<String>("carID")
    static let engine = AlecrimCoreData.NullableAttribute<String>("engine")
    static let image = AlecrimCoreData.NullableAttribute<String>("image")
    static let logo = AlecrimCoreData.NullableAttribute<String>("logo")
    static let manufacturer = AlecrimCoreData.NullableAttribute<String>("manufacturer")
    static let max_speed = AlecrimCoreData.NullableAttribute<String>("max_speed")
    static let name = AlecrimCoreData.NullableAttribute<String>("name")
    static let price = AlecrimCoreData.NullableAttribute<String>("price")
    static let transimission = AlecrimCoreData.NullableAttribute<String>("transimission")
    static let zeroTo60 = AlecrimCoreData.NullableAttribute<String>("zeroTo60")

    static let related_status = AlecrimCoreData.NullableAttribute<Status>("related_status")

    static let followers = AlecrimCoreData.Attribute<Set<User>>("followers")
    static let ownership = AlecrimCoreData.Attribute<Set<SportCarOwnerShip>>("ownership")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: SportCar {

    var body: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("body", self) }
    var carID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("carID", self) }
    var engine: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("engine", self) }
    var image: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("image", self) }
    var logo: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("logo", self) }
    var manufacturer: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("manufacturer", self) }
    var max_speed: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("max_speed", self) }
    var name: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("name", self) }
    var price: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("price", self) }
    var transimission: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("transimission", self) }
    var zeroTo60: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("zeroTo60", self) }

    var related_status: AlecrimCoreData.NullableAttribute<Status> { return AlecrimCoreData.NullableAttribute<Status>("related_status", self) }

    var followers: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("followers", self) }
    var ownership: AlecrimCoreData.Attribute<Set<SportCarOwnerShip>> { return AlecrimCoreData.Attribute<Set<SportCarOwnerShip>>("ownership", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var sportCars: AlecrimCoreData.Table<SportCar> { return AlecrimCoreData.Table<SportCar>(dataContext: self) }

}

