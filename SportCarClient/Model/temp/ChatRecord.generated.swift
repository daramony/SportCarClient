//
//  ChatRecord.generated.swift
//
//  This code was generated by AlecrimCoreData code generator tool.
//
//  Changes to this file may cause incorrect behavior and will be lost if
//  the code is regenerated.
//

import Foundation
import CoreData

import AlecrimCoreData

// MARK: - ChatRecord properties

extension ChatRecord {

    @NSManaged var audio: String?
    @NSManaged var audioLocal: String?
    @NSManaged var chat_type: String?
    @NSManaged var createdAt: NSDate?
    @NSManaged var draft: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var hidden: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var image: String?
    @NSManaged var imageHeight: Double // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var imageWidth: Double // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var messageType: String?
    @NSManaged var read: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var recordID: String?
    @NSManaged var relatedID: String?
    @NSManaged var sent: Bool // cannot mark as optional because Objective-C compatibility issues
    @NSManaged var targetID: String?
    @NSManaged var textContent: String?

    @NSManaged var club: Club?
    @NSManaged var sender: User?

    @NSManaged var related_clubs: Set<Club>
    @NSManaged var related_users: Set<User>

}

// MARK: - ChatRecord KVC compliant to-many accessors and helpers

extension ChatRecord {

    @NSManaged private func addRelated_clubsObject(object: Club)
    @NSManaged private func removeRelated_clubsObject(object: Club)
    @NSManaged func addRelated_clubs(related_clubs: Set<Club>)
    @NSManaged func removeRelated_clubs(related_clubs: Set<Club>)

    @NSManaged private func addRelated_usersObject(object: User)
    @NSManaged private func removeRelated_usersObject(object: User)
    @NSManaged func addRelated_users(related_users: Set<User>)
    @NSManaged func removeRelated_users(related_users: Set<User>)

    func addRelated_club(related_club: Club) { self.addRelated_clubsObject(related_club) }
    func removeRelated_club(related_club: Club) { self.removeRelated_clubsObject(related_club) }

    func addRelated_user(related_user: User) { self.addRelated_usersObject(related_user) }
    func removeRelated_user(related_user: User) { self.removeRelated_usersObject(related_user) }

}

// MARK: - ChatRecord query attributes

extension ChatRecord {

    static let audio = AlecrimCoreData.NullableAttribute<String>("audio")
    static let audioLocal = AlecrimCoreData.NullableAttribute<String>("audioLocal")
    static let chat_type = AlecrimCoreData.NullableAttribute<String>("chat_type")
    static let createdAt = AlecrimCoreData.NullableAttribute<NSDate>("createdAt")
    static let draft = AlecrimCoreData.NullableAttribute<Bool>("draft")
    static let hidden = AlecrimCoreData.NullableAttribute<Bool>("hidden")
    static let image = AlecrimCoreData.NullableAttribute<String>("image")
    static let imageHeight = AlecrimCoreData.NullableAttribute<Double>("imageHeight")
    static let imageWidth = AlecrimCoreData.NullableAttribute<Double>("imageWidth")
    static let messageType = AlecrimCoreData.NullableAttribute<String>("messageType")
    static let read = AlecrimCoreData.NullableAttribute<Bool>("read")
    static let recordID = AlecrimCoreData.NullableAttribute<String>("recordID")
    static let relatedID = AlecrimCoreData.NullableAttribute<String>("relatedID")
    static let sent = AlecrimCoreData.NullableAttribute<Bool>("sent")
    static let targetID = AlecrimCoreData.NullableAttribute<String>("targetID")
    static let textContent = AlecrimCoreData.NullableAttribute<String>("textContent")

    static let club = AlecrimCoreData.NullableAttribute<Club>("club")
    static let sender = AlecrimCoreData.NullableAttribute<User>("sender")

    static let related_clubs = AlecrimCoreData.Attribute<Set<Club>>("related_clubs")
    static let related_users = AlecrimCoreData.Attribute<Set<User>>("related_users")

}

// MARK: - AttributeType extensions

extension AlecrimCoreData.AttributeType where Self.ValueType: ChatRecord {

    var audio: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("audio", self) }
    var audioLocal: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("audioLocal", self) }
    var chat_type: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("chat_type", self) }
    var createdAt: AlecrimCoreData.NullableAttribute<NSDate> { return AlecrimCoreData.NullableAttribute<NSDate>("createdAt", self) }
    var draft: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("draft", self) }
    var hidden: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("hidden", self) }
    var image: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("image", self) }
    var imageHeight: AlecrimCoreData.NullableAttribute<Double> { return AlecrimCoreData.NullableAttribute<Double>("imageHeight", self) }
    var imageWidth: AlecrimCoreData.NullableAttribute<Double> { return AlecrimCoreData.NullableAttribute<Double>("imageWidth", self) }
    var messageType: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("messageType", self) }
    var read: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("read", self) }
    var recordID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("recordID", self) }
    var relatedID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("relatedID", self) }
    var sent: AlecrimCoreData.NullableAttribute<Bool> { return AlecrimCoreData.NullableAttribute<Bool>("sent", self) }
    var targetID: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("targetID", self) }
    var textContent: AlecrimCoreData.NullableAttribute<String> { return AlecrimCoreData.NullableAttribute<String>("textContent", self) }

    var club: AlecrimCoreData.NullableAttribute<Club> { return AlecrimCoreData.NullableAttribute<Club>("club", self) }
    var sender: AlecrimCoreData.NullableAttribute<User> { return AlecrimCoreData.NullableAttribute<User>("sender", self) }

    var related_clubs: AlecrimCoreData.Attribute<Set<Club>> { return AlecrimCoreData.Attribute<Set<Club>>("related_clubs", self) }
    var related_users: AlecrimCoreData.Attribute<Set<User>> { return AlecrimCoreData.Attribute<Set<User>>("related_users", self) }

}

// MARK: - DataContext extensions

extension DataContext {

    var chatRecords: AlecrimCoreData.Table<ChatRecord> { return AlecrimCoreData.Table<ChatRecord>(dataContext: self) }

}

